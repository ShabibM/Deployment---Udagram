{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { ModalController } from '@ionic/angular';\nimport { FeedUploadComponent } from '../feed-upload.component';\nimport { AuthService } from 'src/app/auth/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"src/app/auth/services/auth.service\";\nvar FeedUploadButtonComponent = /** @class */function () {\n  function FeedUploadButtonComponent(modalController, auth) {\n    this.modalController = modalController;\n    this.auth = auth;\n  }\n  FeedUploadButtonComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.auth.currentUser$.subscribe(function (user) {\n      _this.isLoggedIn = user !== null;\n    });\n  };\n  FeedUploadButtonComponent.prototype.ngOnDestroy = function () {\n    if (this.loginSub) {\n      this.loginSub.unsubscribe();\n    }\n  };\n  FeedUploadButtonComponent.prototype.presentUploadForm = function (ev) {\n    return __awaiter(this, void 0, void 0, function () {\n      var modal;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.modalController.create({\n              component: FeedUploadComponent\n            })];\n          case 1:\n            modal = _a.sent();\n            return [4 /*yield*/, modal.present()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  FeedUploadButtonComponent.ɵfac = function FeedUploadButtonComponent_Factory(t) {\n    return new (t || FeedUploadButtonComponent)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  FeedUploadButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FeedUploadButtonComponent,\n    selectors: [[\"app-feed-upload-button\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"]],\n    template: function FeedUploadButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-button\", 0);\n        i0.ɵɵlistener(\"click\", function FeedUploadButtonComponent_Template_ion_button_click_0_listener($event) {\n          return ctx.presentUploadForm($event);\n        });\n        i0.ɵɵtext(1, \" Create a New Post\\n\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disabled\", !ctx.isLoggedIn);\n      }\n    },\n    dependencies: [i1.IonButton]\n  });\n  return FeedUploadButtonComponent;\n}();\nexport { FeedUploadButtonComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}