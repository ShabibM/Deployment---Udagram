{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiService } from 'src/app/api/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/api.service\";\nvar JWT_LOCALSTORE_KEY = 'jwt';\nvar USER_LOCALSTORE_KEY = 'user';\nvar AuthService = /** @class */function () {\n  function AuthService(api) {\n    this.api = api;\n    this.currentUser$ = new BehaviorSubject(null);\n    this.initToken();\n  }\n  AuthService.prototype.initToken = function () {\n    var token = localStorage.getItem(JWT_LOCALSTORE_KEY);\n    var user = JSON.parse(localStorage.getItem(USER_LOCALSTORE_KEY));\n    if (token && user) {\n      this.setTokenAndUser(token, user);\n    }\n  };\n  AuthService.prototype.setTokenAndUser = function (token, user) {\n    localStorage.setItem(JWT_LOCALSTORE_KEY, token);\n    localStorage.setItem(USER_LOCALSTORE_KEY, JSON.stringify(user));\n    this.api.setAuthToken(token);\n    this.currentUser$.next(user);\n  };\n  AuthService.prototype.login = function (email, password) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.api.post('/users/auth/login', {\n          email: email,\n          password: password\n        }).then(function (res) {\n          _this.setTokenAndUser(res.token, res.user);\n          return res;\n        }).catch(function (e) {\n          throw e;\n        })];\n      });\n    });\n  };\n  AuthService.prototype.logout = function () {\n    this.setTokenAndUser(null, null);\n    return true;\n  };\n  AuthService.prototype.register = function (user, password) {\n    var _this = this;\n    return this.api.post('/users/auth/', {\n      email: user.email,\n      password: password\n    }).then(function (res) {\n      _this.setTokenAndUser(res.token, res.user);\n      return res;\n    }).catch(function (e) {\n      throw e;\n    });\n  };\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.ApiService));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n}();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}