{"ast":null,"code":"import { __awaiter, __generator, __spreadArray } from \"tslib\";\nimport { FeedItem } from '../models/feed-item.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiService } from '../../api/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../api/api.service\";\nvar FeedProviderService = /** @class */function () {\n  function FeedProviderService(api) {\n    this.api = api;\n    this.currentFeed$ = new BehaviorSubject([]);\n  }\n  FeedProviderService.prototype.getFeed = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var req, items;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.api.get('/feed')];\n          case 1:\n            req = _a.sent();\n            items = req.rows;\n            this.currentFeed$.next(items);\n            return [2 /*return*/, Promise.resolve(this.currentFeed$)];\n        }\n      });\n    });\n  };\n  FeedProviderService.prototype.uploadFeedItem = function (caption, file) {\n    return __awaiter(this, void 0, void 0, function () {\n      var res, feed;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.api.upload('/feed', file, {\n              caption: caption,\n              url: file.name\n            })];\n          case 1:\n            res = _a.sent();\n            feed = __spreadArray([res], this.currentFeed$.value, true);\n            this.currentFeed$.next(feed);\n            return [2 /*return*/, res];\n        }\n      });\n    });\n  };\n  FeedProviderService.ɵfac = function FeedProviderService_Factory(t) {\n    return new (t || FeedProviderService)(i0.ɵɵinject(i1.ApiService));\n  };\n  FeedProviderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FeedProviderService,\n    factory: FeedProviderService.ɵfac,\n    providedIn: 'root'\n  });\n  return FeedProviderService;\n}();\nexport { FeedProviderService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}